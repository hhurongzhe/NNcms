#pragma once
#ifndef INTERACTION_aPWD_HPP
#define INTERACTION_aPWD_HPP

#include "lib_define.hpp"

namespace interaction_aPWD
{
    using std::string;

    // Error message written and all processes stop.
    void error_message_print_abort(const string &error_message) { std::cout << error_message << std::endl; }

    // redefine for C++ 17.
    constexpr double Pi = 3.14159265358979323846;
    double Power(const double &x, const int &n) { return std::pow(x, n); }
    double Sqrt(const double &x) { return std::sqrt(x); }

    // automated partial-wave projection method.
    double potential_auto(const int &l_final, const int &l_initial, const int &s, const int &j, const double &p_final, const double &p_initial, const double &x, const std::vector<double> &f_component_vec)
    {
        double f1 = f_component_vec[0];
        double f2 = f_component_vec[1];
        double f3 = f_component_vec[2];
        double f4 = f_component_vec[3];
        double f5 = f_component_vec[4];
        double f6 = f_component_vec[5];
        double pmag = p_initial;
        double ppmag = p_final;

        // the following expressions are all generated by Mathematica automatically!!!
        // I just do a copy-and-paste.
        if (l_final == 0 && l_initial == 0 && s == 0 && j == 0)
        {
            return 2 * Pi * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2));
        }
        else if (l_final == 1 && l_initial == 1 && s == 1 && j == 0)
        {
            return -2 * Pi * (-2 * f6 * pmag * ppmag - f1 * x - f2 * x + f6 * Power(pmag, 2) * x + f6 * Power(ppmag, 2) * x - f4 * Power(pmag, 2) * Power(ppmag, 2) * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) + f5 * (2 * pmag * ppmag + Power(pmag, 2) * x + Power(ppmag, 2) * x) - 2 * f3 * pmag * ppmag * (-1 + Power(x, 2)));
        }
        else if (l_final == 1 && l_initial == 1 && s == 0 && j == 1)
        {
            return 2 * Pi * x * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2));
        }
        else if (l_final == 1 && l_initial == 1 && s == 1 && j == 1)
        {
            return 2 * Pi * (-(f6 * pmag * ppmag) + f1 * x + f2 * x + f6 * Power(pmag, 2) * x + f6 * Power(ppmag, 2) * x - f6 * pmag * ppmag * Power(x, 2) + f3 * pmag * ppmag * (-1 + Power(x, 2)) + f5 * (Power(pmag, 2) * x + Power(ppmag, 2) * x + pmag * ppmag * (1 + Power(x, 2))));
        }
        else if (l_final == 0 && l_initial == 0 && s == 1 && j == 1)
        {
            return (2 * Pi * (3 * f1 + 3 * f2 + f5 * Power(pmag, 2) + f6 * Power(pmag, 2) + f5 * Power(ppmag, 2) + f6 * Power(ppmag, 2) + f4 * Power(pmag, 2) * Power(ppmag, 2) + 2 * f5 * pmag * ppmag * x - 2 * f6 * pmag * ppmag * x - f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2))) / 3.;
        }
        else if (l_final == 0 && l_initial == 2 && s == 1 && j == 1)
        {
            return (-2 * Sqrt(2) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (-1 + Power(x, 2)) + f6 * (2 * Power(pmag, 2) - 4 * pmag * ppmag * x + Power(ppmag, 2) * (-1 + 3 * Power(x, 2))) + f5 * (2 * Power(pmag, 2) + 4 * pmag * ppmag * x + Power(ppmag, 2) * (-1 + 3 * Power(x, 2))))) / 3.;
        }
        else if (l_final == 2 && l_initial == 0 && s == 1 && j == 1)
        {
            return (-2 * Sqrt(2) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (-1 + Power(x, 2)) + f6 * (2 * Power(ppmag, 2) - 4 * pmag * ppmag * x + Power(pmag, 2) * (-1 + 3 * Power(x, 2))) + f5 * (2 * Power(ppmag, 2) + 4 * pmag * ppmag * x + Power(pmag, 2) * (-1 + 3 * Power(x, 2))))) / 3.;
        }
        else if (l_final == 2 && l_initial == 2 && s == 1 && j == 1)
        {
            return (Pi * (f5 * Power(pmag, 2) + f6 * Power(pmag, 2) + f5 * Power(ppmag, 2) + f6 * Power(ppmag, 2) - 5 * f4 * Power(pmag, 2) * Power(ppmag, 2) - 18 * f3 * pmag * ppmag * x - 4 * f5 * pmag * ppmag * x + 4 * f6 * pmag * ppmag * x - 3 * f5 * Power(pmag, 2) * Power(x, 2) - 3 * f6 * Power(pmag, 2) * Power(x, 2) - 3 * f5 * Power(ppmag, 2) * Power(x, 2) - 3 * f6 * Power(ppmag, 2) * Power(x, 2) + 14 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) + 18 * f3 * pmag * ppmag * Power(x, 3) - 9 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) + f1 * (-3 + 9 * Power(x, 2)) + f2 * (-3 + 9 * Power(x, 2)))) / 3.;
        }
        else if (l_final == 2 && l_initial == 2 && s == 0 && j == 2)
        {
            return Pi * (-1 + 3 * Power(x, 2)) * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2));
        }
        else if (l_final == 2 && l_initial == 2 && s == 1 && j == 2)
        {
            return Pi * (-(f5 * Power(pmag, 2)) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) + f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f3 * pmag * ppmag * x + 3 * f5 * Power(pmag, 2) * Power(x, 2) + 3 * f6 * Power(pmag, 2) * Power(x, 2) + 3 * f5 * Power(ppmag, 2) * Power(x, 2) + 3 * f6 * Power(ppmag, 2) * Power(x, 2) - 2 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) + 2 * f3 * pmag * ppmag * Power(x, 3) + 4 * f5 * pmag * ppmag * Power(x, 3) - 4 * f6 * pmag * ppmag * Power(x, 3) + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) + f1 * (-1 + 3 * Power(x, 2)) + f2 * (-1 + 3 * Power(x, 2)));
        }
        else if (l_final == 1 && l_initial == 1 && s == 1 && j == 2)
        {
            return (2 * Pi * (f6 * pmag * ppmag + 5 * f1 * x + 5 * f2 * x + f6 * Power(pmag, 2) * x + f6 * Power(ppmag, 2) * x + 2 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x - 3 * f6 * pmag * ppmag * Power(x, 2) - 2 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) - 5 * f3 * pmag * ppmag * (-1 + Power(x, 2)) + f5 * (Power(pmag, 2) * x + Power(ppmag, 2) * x + pmag * ppmag * (-1 + 3 * Power(x, 2))))) / 5.;
        }
        else if (l_final == 1 && l_initial == 3 && s == 1 && j == 2)
        {
            return (-2 * Sqrt(6) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (-1 + Power(x, 2)) + f6 * (2 * Power(pmag, 2) * x + pmag * ppmag * (2 - 6 * Power(x, 2)) + Power(ppmag, 2) * x * (-3 + 5 * Power(x, 2))) + f5 * (2 * Power(pmag, 2) * x + 2 * pmag * ppmag * (-1 + 3 * Power(x, 2)) + Power(ppmag, 2) * x * (-3 + 5 * Power(x, 2))))) / 5.;
        }
        else if (l_final == 3 && l_initial == 1 && s == 1 && j == 2)
        {
            return (-2 * Sqrt(6) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (-1 + Power(x, 2)) + f6 * (2 * Power(ppmag, 2) * x + pmag * ppmag * (2 - 6 * Power(x, 2)) + Power(pmag, 2) * x * (-3 + 5 * Power(x, 2))) + f5 * (2 * Power(ppmag, 2) * x + 2 * pmag * ppmag * (-1 + 3 * Power(x, 2)) + Power(pmag, 2) * x * (-3 + 5 * Power(x, 2))))) / 5.;
        }
        else if (l_final == 3 && l_initial == 3 && s == 1 && j == 2)
        {
            return (Pi * (-2 * f6 * pmag * ppmag - 15 * f1 * x - 15 * f2 * x + 3 * f6 * Power(pmag, 2) * x + 3 * f6 * Power(ppmag, 2) * x - 19 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x + 6 * f6 * pmag * ppmag * Power(x, 2) + 25 * f1 * Power(x, 3) + 25 * f2 * Power(x, 3) - 5 * f6 * Power(pmag, 2) * Power(x, 3) - 5 * f6 * Power(ppmag, 2) * Power(x, 3) + 44 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) - 25 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) + 10 * f3 * pmag * ppmag * (1 - 6 * Power(x, 2) + 5 * Power(x, 4)) + f5 * (pmag * ppmag * (2 - 6 * Power(x, 2)) + Power(ppmag, 2) * x * (3 - 5 * Power(x, 2)) + Power(pmag, 2) * (3 * x - 5 * Power(x, 3))))) / 5.;
        }
        else if (l_final == 3 && l_initial == 3 && s == 0 && j == 3)
        {
            return Pi * x * (-3 + 5 * Power(x, 2)) * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2));
        }
        else if (l_final == 3 && l_initial == 3 && s == 1 && j == 3)
        {
            return (Pi * (f6 * pmag * ppmag - 6 * f1 * x - 6 * f2 * x - 6 * f6 * Power(pmag, 2) * x - 6 * f6 * Power(ppmag, 2) * x + 5 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x + 6 * f6 * pmag * ppmag * Power(x, 2) + 10 * f1 * Power(x, 3) + 10 * f2 * Power(x, 3) + 10 * f6 * Power(pmag, 2) * Power(x, 3) + 10 * f6 * Power(ppmag, 2) * Power(x, 3) - 10 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) - 15 * f6 * pmag * ppmag * Power(x, 4) + 5 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) + f3 * pmag * ppmag * (1 - 6 * Power(x, 2) + 5 * Power(x, 4)) + f5 * (2 * Power(pmag, 2) * x * (-3 + 5 * Power(x, 2)) + 2 * Power(ppmag, 2) * x * (-3 + 5 * Power(x, 2)) + pmag * ppmag * (-1 - 6 * Power(x, 2) + 15 * Power(x, 4))))) / 2.;
        }
        else if (l_final == 2 && l_initial == 2 && s == 1 && j == 3)
        {
            return -0.14285714285714285 * (Pi * (f5 * Power(pmag, 2) + f6 * Power(pmag, 2) + f5 * Power(ppmag, 2) + f6 * Power(ppmag, 2) + 5 * f4 * Power(pmag, 2) * Power(ppmag, 2) - 28 * f3 * pmag * ppmag * x + 6 * f5 * pmag * ppmag * x - 6 * f6 * pmag * ppmag * x - 3 * f5 * Power(pmag, 2) * Power(x, 2) - 3 * f6 * Power(pmag, 2) * Power(x, 2) - 3 * f5 * Power(ppmag, 2) * Power(x, 2) - 3 * f6 * Power(ppmag, 2) * Power(x, 2) - 16 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) + 28 * f3 * pmag * ppmag * Power(x, 3) - 10 * f5 * pmag * ppmag * Power(x, 3) + 10 * f6 * pmag * ppmag * Power(x, 3) + 11 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) + f1 * (7 - 21 * Power(x, 2)) + f2 * (7 - 21 * Power(x, 2))));
        }
        else if (l_final == 2 && l_initial == 4 && s == 1 && j == 3)
        {
            return -0.14285714285714285 * (Sqrt(3) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (1 - 6 * Power(x, 2) + 5 * Power(x, 4)) + f6 * (4 * Power(pmag, 2) * (-1 + 3 * Power(x, 2)) - 8 * pmag * ppmag * x * (-3 + 5 * Power(x, 2)) + Power(ppmag, 2) * (3 - 30 * Power(x, 2) + 35 * Power(x, 4))) + f5 * (4 * Power(pmag, 2) * (-1 + 3 * Power(x, 2)) + 8 * pmag * ppmag * x * (-3 + 5 * Power(x, 2)) + Power(ppmag, 2) * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)))));
        }
        else if (l_final == 4 && l_initial == 2 && s == 1 && j == 3)
        {
            return -0.14285714285714285 * (Sqrt(3) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (1 - 6 * Power(x, 2) + 5 * Power(x, 4)) + f6 * (4 * Power(ppmag, 2) * (-1 + 3 * Power(x, 2)) - 8 * pmag * ppmag * x * (-3 + 5 * Power(x, 2)) + Power(pmag, 2) * (3 - 30 * Power(x, 2) + 35 * Power(x, 4))) + f5 * (4 * Power(ppmag, 2) * (-1 + 3 * Power(x, 2)) + 8 * pmag * ppmag * x * (-3 + 5 * Power(x, 2)) + Power(pmag, 2) * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)))));
        }
        else if (l_final == 4 && l_initial == 4 && s == 1 && j == 3)
        {
            return (Pi * (-3 * f5 * Power(pmag, 2) - 3 * f6 * Power(pmag, 2) - 3 * f5 * Power(ppmag, 2) - 3 * f6 * Power(ppmag, 2) + 27 * f4 * Power(pmag, 2) * Power(ppmag, 2) + 210 * f3 * pmag * ppmag * x + 24 * f5 * pmag * ppmag * x - 24 * f6 * pmag * ppmag * x + 30 * f5 * Power(pmag, 2) * Power(x, 2) + 30 * f6 * Power(pmag, 2) * Power(x, 2) + 30 * f5 * Power(ppmag, 2) * Power(x, 2) + 30 * f6 * Power(ppmag, 2) * Power(x, 2) - 267 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) - 700 * f3 * pmag * ppmag * Power(x, 3) - 40 * f5 * pmag * ppmag * Power(x, 3) + 40 * f6 * pmag * ppmag * Power(x, 3) - 35 * f5 * Power(pmag, 2) * Power(x, 4) - 35 * f6 * Power(pmag, 2) * Power(x, 4) - 35 * f5 * Power(ppmag, 2) * Power(x, 4) - 35 * f6 * Power(ppmag, 2) * Power(x, 4) + 485 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) + 490 * f3 * pmag * ppmag * Power(x, 5) - 245 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) + 7 * f1 * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + 7 * f2 * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)))) / 28.;
        }
        else if (l_final == 4 && l_initial == 4 && s == 0 && j == 4)
        {
            return (Pi * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2)) * (3 - 30 * Power(x, 2) + 35 * Power(x, 4))) / 4.;
        }
        else if (l_final == 4 && l_initial == 4 && s == 1 && j == 4)
        {
            return (Pi * (3 * f5 * Power(pmag, 2) + 3 * f6 * Power(pmag, 2) + 3 * f5 * Power(ppmag, 2) + 3 * f6 * Power(ppmag, 2) - 3 * f4 * Power(pmag, 2) * Power(ppmag, 2) + 6 * f3 * pmag * ppmag * x - 30 * f5 * Power(pmag, 2) * Power(x, 2) - 30 * f6 * Power(pmag, 2) * Power(x, 2) - 30 * f5 * Power(ppmag, 2) * Power(x, 2) - 30 * f6 * Power(ppmag, 2) * Power(x, 2) + 27 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) - 20 * f3 * pmag * ppmag * Power(x, 3) - 40 * f5 * pmag * ppmag * Power(x, 3) + 40 * f6 * pmag * ppmag * Power(x, 3) + 35 * f5 * Power(pmag, 2) * Power(x, 4) + 35 * f6 * Power(pmag, 2) * Power(x, 4) + 35 * f5 * Power(ppmag, 2) * Power(x, 4) + 35 * f6 * Power(ppmag, 2) * Power(x, 4) - 45 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) + 14 * f3 * pmag * ppmag * Power(x, 5) + 56 * f5 * pmag * ppmag * Power(x, 5) - 56 * f6 * pmag * ppmag * Power(x, 5) + 21 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) + f1 * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + f2 * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)))) / 4.;
        }
        else if (l_final == 3 && l_initial == 3 && s == 1 && j == 4)
        {
            return -0.05555555555555555 * (Pi * (3 * f6 * pmag * ppmag + 54 * f1 * x + 54 * f2 * x + 6 * f6 * Power(pmag, 2) * x + 6 * f6 * Power(ppmag, 2) * x + 39 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x - 30 * f6 * pmag * ppmag * Power(x, 2) - 90 * f1 * Power(x, 3) - 90 * f2 * Power(x, 3) - 10 * f6 * Power(pmag, 2) * Power(x, 3) - 10 * f6 * Power(ppmag, 2) * Power(x, 3) - 94 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) + 35 * f6 * pmag * ppmag * Power(x, 4) + 55 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) + 27 * f3 * pmag * ppmag * (1 - 6 * Power(x, 2) + 5 * Power(x, 4)) + f5 * (2 * Power(ppmag, 2) * x * (3 - 5 * Power(x, 2)) + Power(pmag, 2) * (6 * x - 10 * Power(x, 3)) + pmag * ppmag * (-3 + 30 * Power(x, 2) - 35 * Power(x, 4)))));
        }
        else if (l_final == 3 && l_initial == 5 && s == 1 && j == 4)
        {
            return -0.1111111111111111 * (Sqrt(5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (3 - 10 * Power(x, 2) + 7 * Power(x, 4)) + f6 * (4 * Power(pmag, 2) * x * (-3 + 5 * Power(x, 2)) - 2 * pmag * ppmag * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + Power(ppmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4))) + f5 * (4 * Power(pmag, 2) * x * (-3 + 5 * Power(x, 2)) + 2 * pmag * ppmag * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + Power(ppmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)))));
        }
        else if (l_final == 5 && l_initial == 3 && s == 1 && j == 4)
        {
            return -0.1111111111111111 * (Sqrt(5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (3 - 10 * Power(x, 2) + 7 * Power(x, 4)) + f6 * (4 * Power(ppmag, 2) * x * (-3 + 5 * Power(x, 2)) - 2 * pmag * ppmag * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + Power(pmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4))) + f5 * (4 * Power(ppmag, 2) * x * (-3 + 5 * Power(x, 2)) + 2 * pmag * ppmag * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + Power(pmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)))));
        }
        else if (l_final == 5 && l_initial == 5 && s == 1 && j == 4)
        {
            return (Pi * (6 * f6 * pmag * ppmag + 135 * f1 * x + 135 * f2 * x - 15 * f6 * Power(pmag, 2) * x - 15 * f6 * Power(ppmag, 2) * x + 159 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x - 60 * f6 * pmag * ppmag * Power(x, 2) - 630 * f1 * Power(x, 3) - 630 * f2 * Power(x, 3) + 70 * f6 * Power(pmag, 2) * Power(x, 3) + 70 * f6 * Power(ppmag, 2) * Power(x, 3) - 845 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) + 70 * f6 * pmag * ppmag * Power(x, 4) + 567 * f1 * Power(x, 5) + 567 * f2 * Power(x, 5) - 63 * f6 * Power(pmag, 2) * Power(x, 5) - 63 * f6 * Power(ppmag, 2) * Power(x, 5) + 1253 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) - 567 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) + 54 * f3 * pmag * ppmag * (-1 + 15 * Power(x, 2) - 35 * Power(x, 4) + 21 * Power(x, 6)) - f5 * (2 * pmag * ppmag * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + Power(pmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + Power(ppmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4))))) / 36.;
        }
        else if (l_final == 5 && l_initial == 5 && s == 0 && j == 5)
        {
            return (Pi * x * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2)) * (15 - 70 * Power(x, 2) + 63 * Power(x, 4))) / 4.;
        }
        else if (l_final == 5 && l_initial == 5 && s == 1 && j == 5)
        {
            return (Pi * (-(f6 * pmag * ppmag) + 15 * f1 * x + 15 * f2 * x + 15 * f6 * Power(pmag, 2) * x + 15 * f6 * Power(ppmag, 2) * x - 14 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x - 15 * f6 * pmag * ppmag * Power(x, 2) - 70 * f1 * Power(x, 3) - 70 * f2 * Power(x, 3) - 70 * f6 * Power(pmag, 2) * Power(x, 3) - 70 * f6 * Power(ppmag, 2) * Power(x, 3) + 70 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) + 105 * f6 * pmag * ppmag * Power(x, 4) + 63 * f1 * Power(x, 5) + 63 * f2 * Power(x, 5) + 63 * f6 * Power(pmag, 2) * Power(x, 5) + 63 * f6 * Power(ppmag, 2) * Power(x, 5) - 98 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) - 105 * f6 * pmag * ppmag * Power(x, 6) + 42 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) + f3 * pmag * ppmag * (-1 + 15 * Power(x, 2) - 35 * Power(x, 4) + 21 * Power(x, 6)) + f5 * (Power(pmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + Power(ppmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + pmag * ppmag * (1 + 15 * Power(x, 2) - 105 * Power(x, 4) + 105 * Power(x, 6))))) / 4.;
        }
        else if (l_final == 4 && l_initial == 4 && s == 1 && j == 5)
        {
            return (Pi * (3 * f5 * Power(pmag, 2) + 3 * f6 * Power(pmag, 2) + 3 * f5 * Power(ppmag, 2) + 3 * f6 * Power(ppmag, 2) + 27 * f4 * Power(pmag, 2) * Power(ppmag, 2) - 264 * f3 * pmag * ppmag * x + 30 * f5 * pmag * ppmag * x - 30 * f6 * pmag * ppmag * x - 30 * f5 * Power(pmag, 2) * Power(x, 2) - 30 * f6 * Power(pmag, 2) * Power(x, 2) - 30 * f5 * Power(ppmag, 2) * Power(x, 2) - 30 * f6 * Power(ppmag, 2) * Power(x, 2) - 273 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) + 880 * f3 * pmag * ppmag * Power(x, 3) - 140 * f5 * pmag * ppmag * Power(x, 3) + 140 * f6 * pmag * ppmag * Power(x, 3) + 35 * f5 * Power(pmag, 2) * Power(x, 4) + 35 * f6 * Power(pmag, 2) * Power(x, 4) + 35 * f5 * Power(ppmag, 2) * Power(x, 4) + 35 * f6 * Power(ppmag, 2) * Power(x, 4) + 505 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) - 616 * f3 * pmag * ppmag * Power(x, 5) + 126 * f5 * pmag * ppmag * Power(x, 5) - 126 * f6 * pmag * ppmag * Power(x, 5) - 259 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) + 11 * f1 * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + 11 * f2 * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)))) / 44.;
        }
        else if (l_final == 4 && l_initial == 6 && s == 1 && j == 5)
        {
            return -0.045454545454545456 * (Sqrt(7.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (-1 + 15 * Power(x, 2) - 35 * Power(x, 4) + 21 * Power(x, 6)) + f6 * (-4 * pmag * ppmag * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + Power(pmag, 2) * (6 - 60 * Power(x, 2) + 70 * Power(x, 4)) + Power(ppmag, 2) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6))) + f5 * (4 * pmag * ppmag * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + Power(pmag, 2) * (6 - 60 * Power(x, 2) + 70 * Power(x, 4)) + Power(ppmag, 2) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)))));
        }
        else if (l_final == 6 && l_initial == 4 && s == 1 && j == 5)
        {
            return -0.045454545454545456 * (Sqrt(7.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (-1 + 15 * Power(x, 2) - 35 * Power(x, 4) + 21 * Power(x, 6)) + f6 * (2 * Power(ppmag, 2) * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) - 4 * pmag * ppmag * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + Power(pmag, 2) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6))) + f5 * (2 * Power(ppmag, 2) * (3 - 30 * Power(x, 2) + 35 * Power(x, 4)) + 4 * pmag * ppmag * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + Power(pmag, 2) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)))));
        }
        else if (l_final == 6 && l_initial == 6 && s == 1 && j == 5)
        {
            return (Pi * (5 * f5 * Power(pmag, 2) + 5 * f6 * Power(pmag, 2) + 5 * f5 * Power(ppmag, 2) + 5 * f6 * Power(ppmag, 2) - 65 * f4 * Power(pmag, 2) * Power(ppmag, 2) - 770 * f3 * pmag * ppmag * x - 60 * f5 * pmag * ppmag * x + 60 * f6 * pmag * ppmag * x - 105 * f5 * Power(pmag, 2) * Power(x, 2) - 105 * f6 * Power(pmag, 2) * Power(x, 2) - 105 * f5 * Power(ppmag, 2) * Power(x, 2) - 105 * f6 * Power(ppmag, 2) * Power(x, 2) + 1360 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) + 5390 * f3 * pmag * ppmag * Power(x, 3) + 280 * f5 * pmag * ppmag * Power(x, 3) - 280 * f6 * pmag * ppmag * Power(x, 3) + 315 * f5 * Power(pmag, 2) * Power(x, 4) + 315 * f6 * Power(pmag, 2) * Power(x, 4) + 315 * f5 * Power(ppmag, 2) * Power(x, 4) + 315 * f6 * Power(ppmag, 2) * Power(x, 4) - 4970 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) - 9702 * f3 * pmag * ppmag * Power(x, 5) - 252 * f5 * pmag * ppmag * Power(x, 5) + 252 * f6 * pmag * ppmag * Power(x, 5) - 231 * f5 * Power(pmag, 2) * Power(x, 6) - 231 * f6 * Power(pmag, 2) * Power(x, 6) - 231 * f5 * Power(ppmag, 2) * Power(x, 6) - 231 * f6 * Power(ppmag, 2) * Power(x, 6) + 6216 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) + 5082 * f3 * pmag * ppmag * Power(x, 7) - 2541 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 8) + 11 * f1 * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) + 11 * f2 * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)))) / 88.;
        }
        else if (l_final == 6 && l_initial == 6 && s == 0 && j == 6)
        {
            return (Pi * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2)) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6))) / 8.;
        }
        else if (l_final == 6 && l_initial == 6 && s == 1 && j == 6)
        {
            return (Pi * (-5 * f5 * Power(pmag, 2) - 5 * f6 * Power(pmag, 2) - 5 * f5 * Power(ppmag, 2) - 5 * f6 * Power(ppmag, 2) + 5 * f4 * Power(pmag, 2) * Power(ppmag, 2) - 10 * f3 * pmag * ppmag * x + 105 * f5 * Power(pmag, 2) * Power(x, 2) + 105 * f6 * Power(pmag, 2) * Power(x, 2) + 105 * f5 * Power(ppmag, 2) * Power(x, 2) + 105 * f6 * Power(ppmag, 2) * Power(x, 2) - 100 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) + 70 * f3 * pmag * ppmag * Power(x, 3) + 140 * f5 * pmag * ppmag * Power(x, 3) - 140 * f6 * pmag * ppmag * Power(x, 3) - 315 * f5 * Power(pmag, 2) * Power(x, 4) - 315 * f6 * Power(pmag, 2) * Power(x, 4) - 315 * f5 * Power(ppmag, 2) * Power(x, 4) - 315 * f6 * Power(ppmag, 2) * Power(x, 4) + 350 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) - 126 * f3 * pmag * ppmag * Power(x, 5) - 504 * f5 * pmag * ppmag * Power(x, 5) + 504 * f6 * pmag * ppmag * Power(x, 5) + 231 * f5 * Power(pmag, 2) * Power(x, 6) + 231 * f6 * Power(pmag, 2) * Power(x, 6) + 231 * f5 * Power(ppmag, 2) * Power(x, 6) + 231 * f6 * Power(ppmag, 2) * Power(x, 6) - 420 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) + 66 * f3 * pmag * ppmag * Power(x, 7) + 396 * f5 * pmag * ppmag * Power(x, 7) - 396 * f6 * pmag * ppmag * Power(x, 7) + 165 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 8) + f1 * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) + f2 * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)))) / 8.;
        }
        else if (l_final == 5 && l_initial == 5 && s == 1 && j == 6)
        {
            return (Pi * (5 * f6 * pmag * ppmag + 195 * f1 * x + 195 * f2 * x + 15 * f6 * Power(pmag, 2) * x + 15 * f6 * Power(ppmag, 2) * x + 160 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x - 105 * f6 * pmag * ppmag * Power(x, 2) - 910 * f1 * Power(x, 3) - 910 * f2 * Power(x, 3) - 70 * f6 * Power(pmag, 2) * Power(x, 3) - 70 * f6 * Power(ppmag, 2) * Power(x, 3) - 860 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) + 315 * f6 * pmag * ppmag * Power(x, 4) + 819 * f1 * Power(x, 5) + 819 * f2 * Power(x, 5) + 63 * f6 * Power(pmag, 2) * Power(x, 5) + 63 * f6 * Power(ppmag, 2) * Power(x, 5) + 1288 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) - 231 * f6 * pmag * ppmag * Power(x, 6) - 588 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) - 65 * f3 * pmag * ppmag * (-1 + 15 * Power(x, 2) - 35 * Power(x, 4) + 21 * Power(x, 6)) + f5 * (Power(pmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + Power(ppmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + pmag * ppmag * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6))))) / 52.;
        }
        else if (l_final == 5 && l_initial == 7 && s == 1 && j == 6)
        {
            return -0.038461538461538464 * (Sqrt(10.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (-5 + 35 * Power(x, 2) - 63 * Power(x, 4) + 33 * Power(x, 6)) + f6 * (2 * Power(pmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + 2 * pmag * ppmag * (5 - 105 * Power(x, 2) + 315 * Power(x, 4) - 231 * Power(x, 6)) + Power(ppmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6))) + f5 * (2 * Power(pmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + 2 * pmag * ppmag * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) + Power(ppmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)))));
        }
        else if (l_final == 7 && l_initial == 5 && s == 1 && j == 6)
        {
            return -0.038461538461538464 * (Sqrt(10.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (-5 + 35 * Power(x, 2) - 63 * Power(x, 4) + 33 * Power(x, 6)) + f6 * (2 * Power(ppmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + 2 * pmag * ppmag * (5 - 105 * Power(x, 2) + 315 * Power(x, 4) - 231 * Power(x, 6)) + Power(pmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6))) + f5 * (2 * Power(ppmag, 2) * x * (15 - 70 * Power(x, 2) + 63 * Power(x, 4)) + 2 * pmag * ppmag * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) + Power(pmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)))));
        }
        else if (l_final == 7 && l_initial == 7 && s == 1 && j == 6)
        {
            return (Pi * (-10 * f6 * pmag * ppmag - 455 * f1 * x - 455 * f2 * x + 35 * f6 * Power(pmag, 2) * x + 35 * f6 * Power(ppmag, 2) * x - 515 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x + 210 * f6 * pmag * ppmag * Power(x, 2) + 4095 * f1 * Power(x, 3) + 4095 * f2 * Power(x, 3) - 315 * f6 * Power(pmag, 2) * Power(x, 3) - 315 * f6 * Power(ppmag, 2) * Power(x, 3) + 4970 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) - 630 * f6 * pmag * ppmag * Power(x, 4) - 9009 * f1 * Power(x, 5) - 9009 * f2 * Power(x, 5) + 693 * f6 * Power(pmag, 2) * Power(x, 5) + 693 * f6 * Power(ppmag, 2) * Power(x, 5) - 13860 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) + 462 * f6 * pmag * ppmag * Power(x, 6) + 5577 * f1 * Power(x, 7) + 5577 * f2 * Power(x, 7) - 429 * f6 * Power(pmag, 2) * Power(x, 7) - 429 * f6 * Power(ppmag, 2) * Power(x, 7) + 14982 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) - 5577 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 9) + 26 * f3 * pmag * ppmag * (5 - 140 * Power(x, 2) + 630 * Power(x, 4) - 924 * Power(x, 6) + 429 * Power(x, 8)) + f5 * (Power(ppmag, 2) * x * (35 - 315 * Power(x, 2) + 693 * Power(x, 4) - 429 * Power(x, 6)) + 2 * pmag * ppmag * (5 - 105 * Power(x, 2) + 315 * Power(x, 4) - 231 * Power(x, 6)) + Power(pmag, 2) * (35 * x - 315 * Power(x, 3) + 693 * Power(x, 5) - 429 * Power(x, 7))))) / 104.;
        }
        else if (l_final == 7 && l_initial == 7 && s == 0 && j == 7)
        {
            return (Pi * x * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2)) * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6))) / 8.;
        }
        else if (l_final == 7 && l_initial == 7 && s == 1 && j == 7)
        {
            return (Pi * (5 * f6 * pmag * ppmag - 140 * f1 * x - 140 * f2 * x - 140 * f6 * Power(pmag, 2) * x - 140 * f6 * Power(ppmag, 2) * x + 135 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x + 140 * f6 * pmag * ppmag * Power(x, 2) + 1260 * f1 * Power(x, 3) + 1260 * f2 * Power(x, 3) + 1260 * f6 * Power(pmag, 2) * Power(x, 3) + 1260 * f6 * Power(ppmag, 2) * Power(x, 3) - 1260 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) - 1890 * f6 * pmag * ppmag * Power(x, 4) - 2772 * f1 * Power(x, 5) - 2772 * f2 * Power(x, 5) - 2772 * f6 * Power(pmag, 2) * Power(x, 5) - 2772 * f6 * Power(ppmag, 2) * Power(x, 5) + 3402 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) + 4620 * f6 * pmag * ppmag * Power(x, 6) + 1716 * f1 * Power(x, 7) + 1716 * f2 * Power(x, 7) + 1716 * f6 * Power(pmag, 2) * Power(x, 7) + 1716 * f6 * Power(ppmag, 2) * Power(x, 7) - 3564 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) - 3003 * f6 * pmag * ppmag * Power(x, 8) + 1287 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 9) + f3 * pmag * ppmag * (5 - 140 * Power(x, 2) + 630 * Power(x, 4) - 924 * Power(x, 6) + 429 * Power(x, 8)) + f5 * (4 * Power(pmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + 4 * Power(ppmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + pmag * ppmag * (-5 - 140 * Power(x, 2) + 1890 * Power(x, 4) - 4620 * Power(x, 6) + 3003 * Power(x, 8))))) / 32.;
        }
        else if (l_final == 6 && l_initial == 6 && s == 1 && j == 7)
        {
            return (Pi * (-5 * f5 * Power(pmag, 2) - 5 * f6 * Power(pmag, 2) - 5 * f5 * Power(ppmag, 2) - 5 * f6 * Power(ppmag, 2) - 65 * f4 * Power(pmag, 2) * Power(ppmag, 2) + 900 * f3 * pmag * ppmag * x - 70 * f5 * pmag * ppmag * x + 70 * f6 * pmag * ppmag * x + 105 * f5 * Power(pmag, 2) * Power(x, 2) + 105 * f6 * Power(pmag, 2) * Power(x, 2) + 105 * f5 * Power(ppmag, 2) * Power(x, 2) + 105 * f6 * Power(ppmag, 2) * Power(x, 2) + 1370 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) - 6300 * f3 * pmag * ppmag * Power(x, 3) + 630 * f5 * pmag * ppmag * Power(x, 3) - 630 * f6 * pmag * ppmag * Power(x, 3) - 315 * f5 * Power(pmag, 2) * Power(x, 4) - 315 * f6 * Power(pmag, 2) * Power(x, 4) - 315 * f5 * Power(ppmag, 2) * Power(x, 4) - 315 * f6 * Power(ppmag, 2) * Power(x, 4) - 5040 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) + 11340 * f3 * pmag * ppmag * Power(x, 5) - 1386 * f5 * pmag * ppmag * Power(x, 5) + 1386 * f6 * pmag * ppmag * Power(x, 5) + 231 * f5 * Power(pmag, 2) * Power(x, 6) + 231 * f6 * Power(pmag, 2) * Power(x, 6) + 231 * f5 * Power(ppmag, 2) * Power(x, 6) + 231 * f6 * Power(ppmag, 2) * Power(x, 6) + 6342 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) - 5940 * f3 * pmag * ppmag * Power(x, 7) + 858 * f5 * pmag * ppmag * Power(x, 7) - 858 * f6 * pmag * ppmag * Power(x, 7) - 2607 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 8) + 15 * f1 * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) + 15 * f2 * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)))) / 120.;
        }
        else if (l_final == 6 && l_initial == 8 && s == 1 && j == 7)
        {
            return -0.008333333333333333 * (Sqrt(3.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (5 - 140 * Power(x, 2) + 630 * Power(x, 4) - 924 * Power(x, 6) + 429 * Power(x, 8)) + f6 * (8 * Power(pmag, 2) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) - 16 * pmag * ppmag * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + Power(ppmag, 2) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8))) + f5 * (8 * Power(pmag, 2) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) + 16 * pmag * ppmag * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + Power(ppmag, 2) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)))));
        }
        else if (l_final == 8 && l_initial == 6 && s == 1 && j == 7)
        {
            return -0.008333333333333333 * (Sqrt(3.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (5 - 140 * Power(x, 2) + 630 * Power(x, 4) - 924 * Power(x, 6) + 429 * Power(x, 8)) + f6 * (8 * Power(ppmag, 2) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) - 16 * pmag * ppmag * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + Power(pmag, 2) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8))) + f5 * (8 * Power(ppmag, 2) * (-5 + 105 * Power(x, 2) - 315 * Power(x, 4) + 231 * Power(x, 6)) + 16 * pmag * ppmag * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + Power(pmag, 2) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)))));
        }
        else if (l_final == 8 && l_initial == 8 && s == 1 && j == 7)
        {
            return (Pi * (-35 * f5 * Power(pmag, 2) - 35 * f6 * Power(pmag, 2) - 35 * f5 * Power(ppmag, 2) - 35 * f6 * Power(ppmag, 2) + 595 * f4 * Power(pmag, 2) * Power(ppmag, 2) + 9450 * f3 * pmag * ppmag * x + 560 * f5 * pmag * ppmag * x - 560 * f6 * pmag * ppmag * x + 1260 * f5 * Power(pmag, 2) * Power(x, 2) + 1260 * f6 * Power(pmag, 2) * Power(x, 2) + 1260 * f5 * Power(ppmag, 2) * Power(x, 2) + 1260 * f6 * Power(ppmag, 2) * Power(x, 2) - 21385 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) - 113400 * f3 * pmag * ppmag * Power(x, 3) - 5040 * f5 * pmag * ppmag * Power(x, 3) + 5040 * f6 * pmag * ppmag * Power(x, 3) - 6930 * f5 * Power(pmag, 2) * Power(x, 4) - 6930 * f6 * Power(pmag, 2) * Power(x, 4) - 6930 * f5 * Power(ppmag, 2) * Power(x, 4) - 6930 * f6 * Power(ppmag, 2) * Power(x, 4) + 131670 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) + 374220 * f3 * pmag * ppmag * Power(x, 5) + 11088 * f5 * pmag * ppmag * Power(x, 5) - 11088 * f6 * pmag * ppmag * Power(x, 5) + 12012 * f5 * Power(pmag, 2) * Power(x, 6) + 12012 * f6 * Power(pmag, 2) * Power(x, 6) + 12012 * f5 * Power(ppmag, 2) * Power(x, 6) + 12012 * f6 * Power(ppmag, 2) * Power(x, 6) - 297066 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) - 463320 * f3 * pmag * ppmag * Power(x, 7) - 6864 * f5 * pmag * ppmag * Power(x, 7) + 6864 * f6 * pmag * ppmag * Power(x, 7) - 6435 * f5 * Power(pmag, 2) * Power(x, 8) - 6435 * f6 * Power(pmag, 2) * Power(x, 8) - 6435 * f5 * Power(ppmag, 2) * Power(x, 8) - 6435 * f6 * Power(ppmag, 2) * Power(x, 8) + 282711 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 8) + 193050 * f3 * pmag * ppmag * Power(x, 9) - 96525 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 10) + 15 * f1 * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + 15 * f2 * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)))) / 960.;
        }
        else if (l_final == 8 && l_initial == 8 && s == 0 && j == 8)
        {
            return (Pi * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2)) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8))) / 64.;
        }
        else if (l_final == 8 && l_initial == 8 && s == 1 && j == 8)
        {
            return (Pi * (-70 * (f5 + f6 - f4 * Power(pmag, 2)) * Power(ppmag, 2) * Power(-1 + Power(x, 2), 2) * (-1 + 33 * Power(x, 2) - 143 * Power(x, 4) + 143 * Power(x, 6)) - 4 * ppmag * x * (-1 + Power(x, 2)) * (-35 + 385 * Power(x, 2) - 1001 * Power(x, 4) + 715 * Power(x, 6)) * (-(f3 * pmag) - f6 * pmag + f6 * ppmag * x + f5 * (pmag + ppmag * x)) + 2 * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) * (f1 + f2 + f6 * Power(pmag - ppmag * x, 2) + f5 * Power(pmag + ppmag * x, 2)))) / 128.;
        }
        else if (l_final == 7 && l_initial == 7 && s == 1 && j == 8)
        {
            return -0.001838235294117647 * (Pi * (35 * f6 * pmag * ppmag + 2380 * f1 * x + 2380 * f2 * x + 140 * f6 * Power(pmag, 2) * x + 140 * f6 * Power(ppmag, 2) * x + 2065 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x - 1260 * f6 * pmag * ppmag * Power(x, 2) - 21420 * f1 * Power(x, 3) - 21420 * f2 * Power(x, 3) - 1260 * f6 * Power(pmag, 2) * Power(x, 3) - 1260 * f6 * Power(ppmag, 2) * Power(x, 3) - 20020 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) + 6930 * f6 * pmag * ppmag * Power(x, 4) + 47124 * f1 * Power(x, 5) + 47124 * f2 * Power(x, 5) + 2772 * f6 * Power(pmag, 2) * Power(x, 5) + 2772 * f6 * Power(ppmag, 2) * Power(x, 5) + 56070 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) - 12012 * f6 * pmag * ppmag * Power(x, 6) - 29172 * f1 * Power(x, 7) - 29172 * f2 * Power(x, 7) - 1716 * f6 * Power(pmag, 2) * Power(x, 7) - 1716 * f6 * Power(ppmag, 2) * Power(x, 7) - 60852 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) + 6435 * f6 * pmag * ppmag * Power(x, 8) + 22737 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 9) + 119 * f3 * pmag * ppmag * (5 - 140 * Power(x, 2) + 630 * Power(x, 4) - 924 * Power(x, 6) + 429 * Power(x, 8)) + f5 * (-4 * Power(pmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) - 4 * Power(ppmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + pmag * ppmag * (-35 + 1260 * Power(x, 2) - 6930 * Power(x, 4) + 12012 * Power(x, 6) - 6435 * Power(x, 8)))));
        }
        else if (l_final == 7 && l_initial == 9 && s == 1 && j == 8)
        {
            return (-3 * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (35 - 420 * Power(x, 2) + 1386 * Power(x, 4) - 1716 * Power(x, 6) + 715 * Power(x, 8)) + f6 * (8 * Power(pmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) - 2 * pmag * ppmag * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + Power(ppmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8))) + f5 * (8 * Power(pmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + 2 * pmag * ppmag * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + Power(ppmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8))))) / (136. * Sqrt(2));
        }
        else if (l_final == 9 && l_initial == 7 && s == 1 && j == 8)
        {
            return (-3 * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (35 - 420 * Power(x, 2) + 1386 * Power(x, 4) - 1716 * Power(x, 6) + 715 * Power(x, 8)) + f6 * (8 * Power(ppmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) - 2 * pmag * ppmag * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + Power(pmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8))) + f5 * (8 * Power(ppmag, 2) * x * (-35 + 315 * Power(x, 2) - 693 * Power(x, 4) + 429 * Power(x, 6)) + 2 * pmag * ppmag * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + Power(pmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8))))) / (136. * Sqrt(2));
        }
        else if (l_final == 9 && l_initial == 9 && s == 1 && j == 8)
        {
            return (Pi * (70 * f6 * pmag * ppmag + 5355 * f1 * x + 5355 * f2 * x - 315 * f6 * Power(pmag, 2) * x - 315 * f6 * Power(ppmag, 2) * x + 5915 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x - 2520 * f6 * pmag * ppmag * Power(x, 2) - 78540 * f1 * Power(x, 3) - 78540 * f2 * Power(x, 3) + 4620 * f6 * Power(pmag, 2) * Power(x, 3) + 4620 * f6 * Power(ppmag, 2) * Power(x, 3) - 90615 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) + 13860 * f6 * pmag * ppmag * Power(x, 4) + 306306 * f1 * Power(x, 5) + 306306 * f2 * Power(x, 5) - 18018 * f6 * Power(pmag, 2) * Power(x, 5) - 18018 * f6 * Power(ppmag, 2) * Power(x, 5) + 407022 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) - 24024 * f6 * pmag * ppmag * Power(x, 6) - 437580 * f1 * Power(x, 7) - 437580 * f2 * Power(x, 7) + 25740 * f6 * Power(pmag, 2) * Power(x, 7) + 25740 * f6 * Power(ppmag, 2) * Power(x, 7) - 771342 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) + 12870 * f6 * pmag * ppmag * Power(x, 8) + 206635 * f1 * Power(x, 9) + 206635 * f2 * Power(x, 9) - 12155 * f6 * Power(pmag, 2) * Power(x, 9) - 12155 * f6 * Power(ppmag, 2) * Power(x, 9) + 655655 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 9) - 206635 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 11) + 170 * f3 * pmag * ppmag * (-7 + 315 * Power(x, 2) - 2310 * Power(x, 4) + 6006 * Power(x, 6) - 6435 * Power(x, 8) + 2431 * Power(x, 10)) - f5 * (2 * pmag * ppmag * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + Power(pmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) + Power(ppmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8))))) / 1088.;
        }
        else if (l_final == 9 && l_initial == 9 && s == 0 && j == 9)
        {
            return (Pi * x * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2)) * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8))) / 64.;
        }
        else if (l_final == 9 && l_initial == 9 && s == 1 && j == 9)
        {
            return (Pi * (-88 * (f5 + f6 - f4 * Power(pmag, 2)) * Power(ppmag, 2) * x * Power(-1 + Power(x, 2), 2) * (-7 + 91 * Power(x, 2) - 273 * Power(x, 4) + 221 * Power(x, 6)) - 2 * ppmag * (-1 + Power(x, 2)) * (7 - 308 * Power(x, 2) + 2002 * Power(x, 4) - 4004 * Power(x, 6) + 2431 * Power(x, 8)) * (-(f3 * pmag) - f6 * pmag + f6 * ppmag * x + f5 * (pmag + ppmag * x)) + 2 * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) * (f1 + f2 + f6 * Power(pmag - ppmag * x, 2) + f5 * Power(pmag + ppmag * x, 2)))) / 128.;
        }
        else if (l_final == 8 && l_initial == 8 && s == 1 && j == 9)
        {
            return (Pi * (35 * f5 * Power(pmag, 2) + 35 * f6 * Power(pmag, 2) + 35 * f5 * Power(ppmag, 2) + 35 * f6 * Power(ppmag, 2) + 595 * f4 * Power(pmag, 2) * Power(ppmag, 2) - 10640 * f3 * pmag * ppmag * x + 630 * f5 * pmag * ppmag * x - 630 * f6 * pmag * ppmag * x - 1260 * f5 * Power(pmag, 2) * Power(x, 2) - 1260 * f6 * Power(pmag, 2) * Power(x, 2) - 1260 * f5 * Power(ppmag, 2) * Power(x, 2) - 1260 * f6 * Power(ppmag, 2) * Power(x, 2) - 21455 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) + 127680 * f3 * pmag * ppmag * Power(x, 3) - 9240 * f5 * pmag * ppmag * Power(x, 3) + 9240 * f6 * pmag * ppmag * Power(x, 3) + 6930 * f5 * Power(pmag, 2) * Power(x, 4) + 6930 * f6 * Power(pmag, 2) * Power(x, 4) + 6930 * f5 * Power(ppmag, 2) * Power(x, 4) + 6930 * f6 * Power(ppmag, 2) * Power(x, 4) + 132510 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) - 421344 * f3 * pmag * ppmag * Power(x, 5) + 36036 * f5 * pmag * ppmag * Power(x, 5) - 36036 * f6 * pmag * ppmag * Power(x, 5) - 12012 * f5 * Power(pmag, 2) * Power(x, 6) - 12012 * f6 * Power(pmag, 2) * Power(x, 6) - 12012 * f5 * Power(ppmag, 2) * Power(x, 6) - 12012 * f6 * Power(ppmag, 2) * Power(x, 6) - 299838 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) + 521664 * f3 * pmag * ppmag * Power(x, 7) - 51480 * f5 * pmag * ppmag * Power(x, 7) + 51480 * f6 * pmag * ppmag * Power(x, 7) + 6435 * f5 * Power(pmag, 2) * Power(x, 8) + 6435 * f6 * Power(pmag, 2) * Power(x, 8) + 6435 * f5 * Power(ppmag, 2) * Power(x, 8) + 6435 * f6 * Power(ppmag, 2) * Power(x, 8) + 286143 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 8) - 217360 * f3 * pmag * ppmag * Power(x, 9) + 24310 * f5 * pmag * ppmag * Power(x, 9) - 24310 * f6 * pmag * ppmag * Power(x, 9) - 97955 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 10) + 19 * f1 * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + 19 * f2 * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)))) / 1216.;
        }
        else if (l_final == 8 && l_initial == 10 && s == 1 && j == 9)
        {
            return (-3 * Sqrt(2.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (-7 + 315 * Power(x, 2) - 2310 * Power(x, 4) + 6006 * Power(x, 6) - 6435 * Power(x, 8) + 2431 * Power(x, 10)) + f6 * (2 * Power(pmag, 2) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) - 4 * pmag * ppmag * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) + Power(ppmag, 2) * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10))) + f5 * (2 * Power(pmag, 2) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + 4 * pmag * ppmag * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) + Power(ppmag, 2) * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10))))) / 608.;
        }
        else if (l_final == 10 && l_initial == 8 && s == 1 && j == 9)
        {
            return (-3 * Sqrt(2.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * (-7 + 315 * Power(x, 2) - 2310 * Power(x, 4) + 6006 * Power(x, 6) - 6435 * Power(x, 8) + 2431 * Power(x, 10)) + f6 * (2 * Power(ppmag, 2) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) - 4 * pmag * ppmag * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) + Power(pmag, 2) * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10))) + f5 * (2 * Power(ppmag, 2) * (35 - 1260 * Power(x, 2) + 6930 * Power(x, 4) - 12012 * Power(x, 6) + 6435 * Power(x, 8)) + 4 * pmag * ppmag * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) + Power(pmag, 2) * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10))))) / 608.;
        }
        else if (l_final == 10 && l_initial == 10 && s == 1 && j == 9)
        {
            return (Pi * (63 * f5 * Power(pmag, 2) + 63 * f6 * Power(pmag, 2) + 63 * f5 * Power(ppmag, 2) + 63 * f6 * Power(ppmag, 2) - 1323 * f4 * Power(pmag, 2) * Power(ppmag, 2) - 26334 * f3 * pmag * ppmag * x - 1260 * f5 * pmag * ppmag * x + 1260 * f6 * pmag * ppmag * x - 3465 * f5 * Power(pmag, 2) * Power(x, 2) - 3465 * f6 * Power(pmag, 2) * Power(x, 2) - 3465 * f5 * Power(ppmag, 2) * Power(x, 2) - 3465 * f6 * Power(ppmag, 2) * Power(x, 2) + 72702 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2) + 482790 * f3 * pmag * ppmag * Power(x, 3) + 18480 * f5 * pmag * ppmag * Power(x, 3) - 18480 * f6 * pmag * ppmag * Power(x, 3) + 30030 * f5 * Power(pmag, 2) * Power(x, 4) + 30030 * f6 * Power(pmag, 2) * Power(x, 4) + 30030 * f5 * Power(ppmag, 2) * Power(x, 4) + 30030 * f6 * Power(ppmag, 2) * Power(x, 4) - 677985 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 4) - 2510508 * f3 * pmag * ppmag * Power(x, 5) - 72072 * f5 * pmag * ppmag * Power(x, 5) + 72072 * f6 * pmag * ppmag * Power(x, 5) - 90090 * f5 * Power(pmag, 2) * Power(x, 6) - 90090 * f6 * Power(pmag, 2) * Power(x, 6) - 90090 * f5 * Power(ppmag, 2) * Power(x, 6) - 90090 * f6 * Power(ppmag, 2) * Power(x, 6) + 2390388 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 6) + 5379660 * f3 * pmag * ppmag * Power(x, 7) + 102960 * f5 * pmag * ppmag * Power(x, 7) - 102960 * f6 * pmag * ppmag * Power(x, 7) + 109395 * f5 * Power(pmag, 2) * Power(x, 8) + 109395 * f6 * Power(pmag, 2) * Power(x, 8) + 109395 * f5 * Power(ppmag, 2) * Power(x, 8) + 109395 * f6 * Power(ppmag, 2) * Power(x, 8) - 3906045 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 8) - 5080790 * f3 * pmag * ppmag * Power(x, 9) - 48620 * f5 * pmag * ppmag * Power(x, 9) + 48620 * f6 * pmag * ppmag * Power(x, 9) - 46189 * f5 * Power(pmag, 2) * Power(x, 10) - 46189 * f6 * Power(pmag, 2) * Power(x, 10) - 46189 * f5 * Power(ppmag, 2) * Power(x, 10) - 46189 * f6 * Power(ppmag, 2) * Power(x, 10) + 2999854 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 10) + 1755182 * f3 * pmag * ppmag * Power(x, 11) - 877591 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 12) + 19 * f1 * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10)) + 19 * f2 * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10)))) / 2432.;
        }
        else if (l_final == 10 && l_initial == 10 && s == 0 && j == 10)
        {
            return (Pi * (f1 - 3 * f2 - f5 * Power(pmag, 2) - f6 * Power(pmag, 2) - f5 * Power(ppmag, 2) - f6 * Power(ppmag, 2) - f4 * Power(pmag, 2) * Power(ppmag, 2) - 2 * f5 * pmag * ppmag * x + 2 * f6 * pmag * ppmag * x + f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 2)) * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10))) / 128.;
        }
        else if (l_final == 10 && l_initial == 10 && s == 1 && j == 10)
        {
            return (Pi * (-18 * (f5 + f6 - f4 * Power(pmag, 2)) * Power(ppmag, 2) * Power(-1 + Power(x, 2), 2) * (7 - 364 * Power(x, 2) + 2730 * Power(x, 4) - 6188 * Power(x, 6) + 4199 * Power(x, 8)) - 4 * ppmag * x * (-1 + Power(x, 2)) * (63 - 1092 * Power(x, 2) + 4914 * Power(x, 4) - 7956 * Power(x, 6) + 4199 * Power(x, 8)) * (-(f3 * pmag) - f6 * pmag + f6 * ppmag * x + f5 * (pmag + ppmag * x)) + 2 * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10)) * (f1 + f2 + f6 * Power(pmag - ppmag * x, 2) + f5 * Power(pmag + ppmag * x, 2)))) / 256.;
        }
        else if (l_final == 9 && l_initial == 9 && s == 1 && j == 10)
        {
            return (Pi * (63 * f6 * pmag * ppmag + 6615 * f1 * x + 6615 * f2 * x + 315 * f6 * Power(pmag, 2) * x + 315 * f6 * Power(ppmag, 2) * x + 5922 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x - 3465 * f6 * pmag * ppmag * Power(x, 2) - 97020 * f1 * Power(x, 3) - 97020 * f2 * Power(x, 3) - 4620 * f6 * Power(pmag, 2) * Power(x, 3) - 4620 * f6 * Power(ppmag, 2) * Power(x, 3) - 90930 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) + 30030 * f6 * pmag * ppmag * Power(x, 4) + 378378 * f1 * Power(x, 5) + 378378 * f2 * Power(x, 5) + 18018 * f6 * Power(pmag, 2) * Power(x, 5) + 18018 * f6 * Power(ppmag, 2) * Power(x, 5) + 409332 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) - 90090 * f6 * pmag * ppmag * Power(x, 6) - 540540 * f1 * Power(x, 7) - 540540 * f2 * Power(x, 7) - 25740 * f6 * Power(pmag, 2) * Power(x, 7) - 25740 * f6 * Power(ppmag, 2) * Power(x, 7) - 777348 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) + 109395 * f6 * pmag * ppmag * Power(x, 8) + 255255 * f1 * Power(x, 9) + 255255 * f2 * Power(x, 9) + 12155 * f6 * Power(pmag, 2) * Power(x, 9) + 12155 * f6 * Power(ppmag, 2) * Power(x, 9) + 662090 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 9) - 46189 * f6 * pmag * ppmag * Power(x, 10) - 209066 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 11) - 189 * f3 * pmag * ppmag * (-7 + 315 * Power(x, 2) - 2310 * Power(x, 4) + 6006 * Power(x, 6) - 6435 * Power(x, 8) + 2431 * Power(x, 10)) + f5 * (Power(pmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) + Power(ppmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) + pmag * ppmag * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10))))) / 1344.;
        }
        else if (l_final == 9 && l_initial == 11 && s == 1 && j == 10)
        {
            return -0.001488095238095238 * (Sqrt(27.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (-63 + 1155 * Power(x, 2) - 6006 * Power(x, 4) + 12870 * Power(x, 6) - 12155 * Power(x, 8) + 4199 * Power(x, 10)) + f6 * (Power(pmag, 2) * (630 * x - 9240 * Power(x, 3) + 36036 * Power(x, 5) - 51480 * Power(x, 7) + 24310 * Power(x, 9)) - 2 * pmag * ppmag * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10)) + Power(ppmag, 2) * x * (-693 + 15015 * Power(x, 2) - 90090 * Power(x, 4) + 218790 * Power(x, 6) - 230945 * Power(x, 8) + 88179 * Power(x, 10))) + f5 * (Power(pmag, 2) * (630 * x - 9240 * Power(x, 3) + 36036 * Power(x, 5) - 51480 * Power(x, 7) + 24310 * Power(x, 9)) + 2 * pmag * ppmag * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10)) + Power(ppmag, 2) * x * (-693 + 15015 * Power(x, 2) - 90090 * Power(x, 4) + 218790 * Power(x, 6) - 230945 * Power(x, 8) + 88179 * Power(x, 10)))));
        }
        else if (l_final == 11 && l_initial == 9 && s == 1 && j == 10)
        {
            return -0.001488095238095238 * (Sqrt(27.5) * Pi * (f4 * Power(pmag, 2) * Power(ppmag, 2) * x * (-63 + 1155 * Power(x, 2) - 6006 * Power(x, 4) + 12870 * Power(x, 6) - 12155 * Power(x, 8) + 4199 * Power(x, 10)) + f6 * (2 * Power(ppmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) - 2 * pmag * ppmag * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10)) + Power(pmag, 2) * x * (-693 + 15015 * Power(x, 2) - 90090 * Power(x, 4) + 218790 * Power(x, 6) - 230945 * Power(x, 8) + 88179 * Power(x, 10))) + f5 * (2 * Power(ppmag, 2) * x * (315 - 4620 * Power(x, 2) + 18018 * Power(x, 4) - 25740 * Power(x, 6) + 12155 * Power(x, 8)) + 2 * pmag * ppmag * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10)) + Power(pmag, 2) * x * (-693 + 15015 * Power(x, 2) - 90090 * Power(x, 4) + 218790 * Power(x, 6) - 230945 * Power(x, 8) + 88179 * Power(x, 10)))));
        }
        else if (l_final == 11 && l_initial == 11 && s == 1 && j == 10)
        {
            return (Pi * (-126 * f6 * pmag * ppmag - 14553 * f1 * x - 14553 * f2 * x + 693 * f6 * Power(pmag, 2) * x + 693 * f6 * Power(ppmag, 2) * x - 15813 * f4 * Power(pmag, 2) * Power(ppmag, 2) * x + 6930 * f6 * pmag * ppmag * Power(x, 2) + 315315 * f1 * Power(x, 3) + 315315 * f2 * Power(x, 3) - 15015 * f6 * Power(pmag, 2) * Power(x, 3) - 15015 * f6 * Power(ppmag, 2) * Power(x, 3) + 352968 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 3) - 60060 * f6 * pmag * ppmag * Power(x, 4) - 1891890 * f1 * Power(x, 5) - 1891890 * f2 * Power(x, 5) + 90090 * f6 * Power(pmag, 2) * Power(x, 5) + 90090 * f6 * Power(ppmag, 2) * Power(x, 5) - 2327325 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 5) + 180180 * f6 * pmag * ppmag * Power(x, 6) + 4594590 * f1 * Power(x, 7) + 4594590 * f2 * Power(x, 7) - 218790 * f6 * Power(pmag, 2) * Power(x, 7) - 218790 * f6 * Power(ppmag, 2) * Power(x, 7) + 6743880 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 7) - 218790 * f6 * pmag * ppmag * Power(x, 8) - 4849845 * f1 * Power(x, 9) - 4849845 * f2 * Power(x, 9) + 230945 * f6 * Power(pmag, 2) * Power(x, 9) + 230945 * f6 * Power(ppmag, 2) * Power(x, 9) - 9687535 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 9) + 92378 * f6 * pmag * ppmag * Power(x, 10) + 1851759 * f1 * Power(x, 11) + 1851759 * f2 * Power(x, 11) - 88179 * f6 * Power(pmag, 2) * Power(x, 11) - 88179 * f6 * Power(ppmag, 2) * Power(x, 11) + 6785584 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 11) - 1851759 * f4 * Power(pmag, 2) * Power(ppmag, 2) * Power(x, 13) + 126 * f3 * pmag * ppmag * (21 - 1386 * Power(x, 2) + 15015 * Power(x, 4) - 60060 * Power(x, 6) + 109395 * Power(x, 8) - 92378 * Power(x, 10) + 29393 * Power(x, 12)) + f5 * (Power(ppmag, 2) * x * (693 - 15015 * Power(x, 2) + 90090 * Power(x, 4) - 218790 * Power(x, 6) + 230945 * Power(x, 8) - 88179 * Power(x, 10)) - 2 * pmag * ppmag * (-63 + 3465 * Power(x, 2) - 30030 * Power(x, 4) + 90090 * Power(x, 6) - 109395 * Power(x, 8) + 46189 * Power(x, 10)) + Power(pmag, 2) * (693 * x - 15015 * Power(x, 3) + 90090 * Power(x, 5) - 218790 * Power(x, 7) + 230945 * Power(x, 9) - 88179 * Power(x, 11))))) / 2688.;
        }

        else
        {
            error_message_print_abort("J out of aPWD method!");
        }
        return 0;
    }

    // regulator function used to cut-off high momentum part in the L-S equation.
    double regulator_function(double p1, double p2, int n, NN::NN_configs configs)
    {
        double regulator = std::exp(-std::pow(p1 / configs.Lambda, 2 * n) - std::pow(p2 / configs.Lambda, 2 * n));
        return regulator;
    }

    // loop integral function.
    double loop_function_L(double q, NN::NN_configs configs)
    {
        double temp;
        double lambda = configs.Lambda_tilde;
        double mpi = configs.mass_pion_averaged;
        double w = std::sqrt(4.0 * mpi * mpi + q * q);
        double num = lambda * lambda * (2.0 * mpi * mpi + q * q) - 2.0 * mpi * mpi * q * q +
                     lambda * std::sqrt(lambda * lambda - 4.0 * mpi * mpi) * q * w;
        double den = 2.0 * mpi * mpi * (lambda * lambda + q * q);
        double fac = w / (2.0 * q);
        temp = fac * std::log(num / den);
        return temp;
    }

    double loop_function_A(double q, NN::NN_configs configs)
    {
        double temp;
        double lambda = configs.Lambda_tilde;
        double mpi = configs.mass_pion_averaged;
        double num = q * (lambda - 2.0 * mpi);
        double den = q * q + 2.0 * lambda * mpi;
        double fac = 1.0 / (2.0 * q);
        temp = fac * std::atan(num / den);
        return temp;
    }

} // end namespace interaction_aPWD

#endif // INTERACTION_aPWD_HPP
